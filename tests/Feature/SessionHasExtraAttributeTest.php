<?php

namespace Tests\Feature;

use App\Event;
use App\Session;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class SessionHasExtraAttributeTest extends TestCase
{
    use RefreshDatabase;

    private $event;
    private $session;

    protected function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->event = factory(Event::class)->create();

    }

    /**
     * @test
     */
    public function create_session() {

        $this->withoutExceptionHandling();

        $user = factory(User::class)->create();

        $this->actingAs($user);

        $data = [
            'title'            => 'Session testing title',
            'start_at'         => "31 Dec 2018 12:00",
            'end_at'           => "31 Dec 2018 13:00",
            'extra_attributes' => [
                'description' => "this is the extra description",
                'summary'     => "this is the extra summary",
            ]
        ];

        $response = $this->post(route('events.sessions.store', $this->event),
            $data);

        $response->assertRedirect(route('events.sessions.index', $this->event));

        $description = $this->event->sessions->first()->extra_attributes->description;

        $this->assertEquals($data['extra_attributes']['description'],
            $description);

    }

    /**
     * @test
     */
    public function update_session_with_extra_attributes() {

        $this->withoutExceptionHandling();

        $user = factory(User::class)->create();

        $this->actingAs($user);

        $session = factory(Session::class)->create([
            'event_id' => $this->event->id
        ]);

        $uri = route('events.sessions.update', [$this->event, $session]);

        $data = [
            'title'            => 'Session testing title',
            'start_at'         => "31 Dec 2018 12:00",
            'end_at'           => "31 Dec 2018 13:00",
            'extra_attributes' => [
                'description' => "this is the updated description",
                'summary'     => "this is the updated summary",
            ]
        ];

        $this->put($uri, $data);

        $session->refresh();


        $this->assertEquals($data['extra_attributes']['description'],
            $session->extra_attributes->description);

        $this->assertEquals($data['extra_attributes']['summary'],
            $session->extra_attributes->summary);

    }
}
