<?php

namespace Tests\Feature;

use App\Event;
use App\User;
use Carbon\Carbon;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Pagination\LengthAwarePaginator;
use Maatwebsite\Excel\Facades\Excel;
use Tests\TestCase;

class CheckInRecordTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var \App\Event
     */
    private $event;

    protected function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->event = factory(Event::class)->create();

    }

    /**
     * @test
     */
    public function get_index_page_unauthenticate() {
        $this->withoutExceptionHandling();
        $uri = route('events.checkinRecords', $this->event);

        $this->expectException(AuthenticationException::class);
        $this->get($uri);

    }

    /**
     * @test
     */
    public function get_index_page_successful() {
        $user = factory(User::class)->create();

        $this->actingAs($user);
        $uri = route('events.checkinRecords', $this->event);
        $response = $this->get($uri);

        $response->assertSuccessful();

    }

    /**
     * @test
     */
    public function get_proper_index_view() {

        $this->withoutExceptionHandling();
        $user = factory(User::class)->create();

        $this->actingAs($user);
        $uri = route('events.checkinRecords', $this->event);
        $response = $this->get($uri);

        $response->assertViewIs('admin.events.checkinRecords.index')
                 ->assertViewHas(['event', 'records', 'stats','files'])
                 ->assertSee("Export")
                 ->assertSee(route('events.checkinRecords.export',
                     $this->event));

        $records = $response->viewData('records');

        $this->assertInstanceOf(LengthAwarePaginator::class, $records);

    }

    /**
     * @test
     */
    public function download_export() {
        Carbon::setTestNow(Carbon::createFromDate(2019, 1, 1));

        Excel::fake();

        $this->withoutExceptionHandling();
        $user = factory(User::class)->create();

        $this->actingAs($user)
             ->get(route('events.checkinRecords.export', $this->event));

        Excel::assertDownloaded($this->event->getExportCheckinFilename());

    }
}
